package negocio;
// Generated 07/10/2017 19:33:54 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Exame generated by hbm2java
 */
@Entity
@Table(name="exame"
    ,catalog="sistemaclinica"
)
public class Exame  implements java.io.Serializable {


     private int idExame;
     private ResultadoExame resultadoExame;
     private TipoExame tipoExame;
     private String especialidade;
     private Date dataRealizacao;
     private Set funcionarios = new HashSet(0);
     private Set empresas = new HashSet(0);
     private Set atestados = new HashSet(0);

    public Exame() {
    }

	
    public Exame(int idExame, ResultadoExame resultadoExame, TipoExame tipoExame, String especialidade, Date dataRealizacao) {
        this.idExame = idExame;
        this.resultadoExame = resultadoExame;
        this.tipoExame = tipoExame;
        this.especialidade = especialidade;
        this.dataRealizacao = dataRealizacao;
    }
    public Exame(int idExame, ResultadoExame resultadoExame, TipoExame tipoExame, String especialidade, Date dataRealizacao, Set funcionarios, Set empresas, Set atestados) {
       this.idExame = idExame;
       this.resultadoExame = resultadoExame;
       this.tipoExame = tipoExame;
       this.especialidade = especialidade;
       this.dataRealizacao = dataRealizacao;
       this.funcionarios = funcionarios;
       this.empresas = empresas;
       this.atestados = atestados;
    }
   
     @Id 

    
    @Column(name="id_exame", unique=true, nullable=false)
    public int getIdExame() {
        return this.idExame;
    }
    
    public void setIdExame(int idExame) {
        this.idExame = idExame;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="resultado_exame_id_tipo_resultado_exame", nullable=false)
    public ResultadoExame getResultadoExame() {
        return this.resultadoExame;
    }
    
    public void setResultadoExame(ResultadoExame resultadoExame) {
        this.resultadoExame = resultadoExame;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tipo_exame_id_tipo_exame", nullable=false)
    public TipoExame getTipoExame() {
        return this.tipoExame;
    }
    
    public void setTipoExame(TipoExame tipoExame) {
        this.tipoExame = tipoExame;
    }

    
    @Column(name="especialidade", nullable=false, length=50)
    public String getEspecialidade() {
        return this.especialidade;
    }
    
    public void setEspecialidade(String especialidade) {
        this.especialidade = especialidade;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="data_realizacao", nullable=false, length=10)
    public Date getDataRealizacao() {
        return this.dataRealizacao;
    }
    
    public void setDataRealizacao(Date dataRealizacao) {
        this.dataRealizacao = dataRealizacao;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="funcionario_has_exame", catalog="sistemaclinica", joinColumns = { 
        @JoinColumn(name="exame_id_exame", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="funcionario_id_funcionario", nullable=false, updatable=false) })
    public Set getFuncionarios() {
        return this.funcionarios;
    }
    
    public void setFuncionarios(Set funcionarios) {
        this.funcionarios = funcionarios;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="empresa_has_exame", catalog="sistemaclinica", joinColumns = { 
        @JoinColumn(name="exame_id_exame", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="empresa_id_empresa", nullable=false, updatable=false) })
    public Set getEmpresas() {
        return this.empresas;
    }
    
    public void setEmpresas(Set empresas) {
        this.empresas = empresas;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="exame_has_atestado", catalog="sistemaclinica", joinColumns = { 
        @JoinColumn(name="exame_id_exame", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="atestado_id_atestado", nullable=false, updatable=false) })
    public Set getAtestados() {
        return this.atestados;
    }
    
    public void setAtestados(Set atestados) {
        this.atestados = atestados;
    }




}


